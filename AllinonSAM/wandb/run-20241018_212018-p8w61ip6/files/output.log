Training parameters:
----------
number of trainable parameters:  1572370
batch size:  2
num epochs:  500
Epoch 0/499
----------
Traceback (most recent call last):
  File "/home/abdelrahman.elsayed/sarim_code/train_baselines.py", line 266, in <module>
    main_train(data_config, model_config, args.pretrained_path, args.save_path, args.training_strategy, device=args.device)
  File "/home/abdelrahman.elsayed/sarim_code/train_baselines.py", line 234, in main_train
    model = train_dl(
  File "/home/abdelrahman.elsayed/sarim_code/train.py", line 218, in train_dl
    outputs, reg_loss = model(inputs, text)
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abdelrahman.elsayed/sarim_code/axialnet.py", line 711, in forward
    return self.soft(self._forward_impl(x)),0
  File "/home/abdelrahman.elsayed/sarim_code/axialnet.py", line 638, in _forward_impl
    x2 = self.layer2(x1)
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abdelrahman.elsayed/sarim_code/axialnet.py", line 332, in forward
    out = self.width_block(out)
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abdelrahman.elsayed/sarim_code/axialnet.py", line 167, in forward
    stacked_similarity = self.bn_similarity(stacked_similarity).view(N * W, 3, self.groups, H, H).sum(dim=1)
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 171, in forward
    return F.batch_norm(
  File "/home/abdelrahman.elsayed/.conda/envs/s-sam/lib/python3.8/site-packages/torch/nn/functional.py", line 2450, in batch_norm
    return torch.batch_norm(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 3.00 GiB (GPU 0; 23.65 GiB total capacity; 18.59 GiB already allocated; 1.82 GiB free; 21.35 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF